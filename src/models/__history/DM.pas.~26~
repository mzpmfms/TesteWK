unit DM;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Comp.Client, Conexao, FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf,
  FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys,
  FireDAC.Phys.MySQLDef, FireDAC.VCLUI.Wait, FireDAC.Comp.UI,
  FireDAC.Phys.MySQL, FireDAC.Comp.Client;

type
  TDM = class(TDataModule)
    FDQuery: TFDQuery;
  private
    FConexao: TConexao;
  public
    constructor Create(AOwner: TComponent); override;
    destructor Destroy; override;
  end;

var
  DataModule: TConexao;

implementation

{ TDM }

constructor TDM.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);

  FConexao := DataModule.Create;
  FDQuery.Connection := FConexao.GetConnection;

end;

destructor TDM.Destroy;
begin
  FConexao.Free;
  inherited Destroy;
end;

end.
